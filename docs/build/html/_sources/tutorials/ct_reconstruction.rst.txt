
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/ct_reconstruction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_ct_reconstruction.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_ct_reconstruction.py:


02. Reconstruction I
================
This tutorial demonstrates the reconstruction of a
measurement obtained in computer tomography.
As mathematical construct the radon transformation is used here.
The implementations of skimage (radon, iradon) are used.

IN PROGRESS

.. GENERATED FROM PYTHON SOURCE LINES 13-14

We create a scenario with a

.. GENERATED FROM PYTHON SOURCE LINES 14-76

.. code-block:: default

    import numpy as np
    import matplotlib.pyplot as plt

    from recon.utils import psnr
    from recon.operator.ct_radon import CtRt
    from recon.interfaces import Recon, ReconBregman, Smoothing, SmoothBregman

    from matplotlib import image

    # load image as pixel array
    gt = image.imread("../data/phantom.png")
    gt = gt/np.max(gt)
    gt = gt

    ntheta = 180
    theta = np.linspace(0, 180, ntheta, endpoint=False)
    sigma = 0.01
    R = CtRt(gt.shape, center=[gt.shape[0]//2, gt.shape[1]//2], theta=theta)

    y = R*gt.ravel()
    y_max = np.max(y)

    n = np.random.normal(0, sigma*y_max, size=y.shape)
    y = y + n

    x_rec = np.reshape(R.inv*y.ravel(), gt.shape)

    fig, axs = plt.subplots(1, 3, figsize=(14, 5))
    axs[0].imshow(gt, vmin=0, vmax=1)
    axs[0].set_title('Model')
    axs[0].axis('tight')
    axs[1].imshow(np.reshape(y, R.image_dim).T)
    axs[1].set_title('Data')
    axs[1].axis('tight')
    axs[2].imshow(x_rec, vmin=0, vmax=1)
    axs[2].set_title("FBP - PSNR: "+str(psnr(gt, x_rec)))
    axs[2].axis('tight')
    fig.tight_layout()
    plt.show()


    lam = 15
    rec = Recon(operator=R, domain_shape=gt.shape, reg_mode='tv', alpha=1, lam=lam, extend_pdhgm=True)
    x_tv = rec.solve(data=y.ravel(), max_iter=1000, tol=1e-4)
    plt.imshow(x_tv, vmin=0, vmax=1)

    tv_smoothing = Smoothing(domain_shape=gt.shape, reg_mode='tv', lam=10, tau='calc')
    fbp_smooth = tv_smoothing.solve(data=x_rec, max_iter=1000, tol=1e-4)


    fig, axs = plt.subplots(1, 3, figsize=(14, 5))
    axs[0].imshow(gt, vmin=0, vmax=1)
    axs[0].set_title('Model')
    axs[0].axis('tight')
    axs[1].imshow(x_tv, vmin=0, vmax=1)
    axs[1].set_title("TV-Recon - PSNR: "+str(psnr(gt, x_tv)))
    axs[1].axis('tight')
    axs[2].imshow(fbp_smooth, vmin=0, vmax=1)
    axs[2].set_title("FBP-Smooth - PSNR: "+str(psnr(gt, fbp_smooth)))
    axs[2].axis('tight')
    fig.tight_layout()
    plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /tutorials/images/sphx_glr_ct_reconstruction_001.png
          :alt: Model, Data, FBP - PSNR: 18.52
          :class: sphx-glr-multi-img

    *

      .. image:: /tutorials/images/sphx_glr_ct_reconstruction_002.png
          :alt: Model, TV-Recon - PSNR: 25.95, FBP-Smooth - PSNR: 20.74
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/lucasplagwitz/git_projects/recon/recon/solver/pd_hgm_extend.py:134: RuntimeWarning: divide by zero encountered in double_scalars
      self.sens = np.linalg.norm(p_gap)/np.linalg.norm(p_old)
    inf
    0.0576336212247
    0.0250800661559
    0.0123657347616
    0.00699186430215
    0.0038412083249
    0.00224633551805
    0.00135525011643
    0.000832137077708
    0.000530430163864
    0.000353173330506
    0.000252315303506
    0.000184358604398
    0.000145256683835
    0.000123379257956
    0.000104805932841
    9.44278201543e-05
     Early stopping.
     Early stopping.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  32.256 seconds)


.. _sphx_glr_download_tutorials_ct_reconstruction.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: ct_reconstruction.py <ct_reconstruction.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: ct_reconstruction.ipynb <ct_reconstruction.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
